appId: com.electron.warframetracker
productName: Warframe Tracker

directories:
  buildResources: build

files:
  # Include built output and resources, exclude dev/config files and sources
  - 'out/**'
  - 'resources/**'
  - '!**/.vscode/**'
  - '!src/**'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'

asarUnpack:
  - resources/**

win:
  executableName: Warframe-Tracker
  target:
    - nsis
  icon: build/icon.ico
  legalTrademarks: Warframe
nsis:
  artifactName: ${productName}-setup-${version}.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always

mac:
  target:
    - dmg
    - zip
  icon: build/icon.icns
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    NSCameraUsageDescription: Application requests access to the device's camera.
    NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false

dmg:
  artifactName: ${productName}-${version}.${ext}

linux:
  target:
    - AppImage
    - snap
    - deb
  icon: build/icon.png
  maintainer: electronjs.org
  category: Utility

appImage:
  artifactName: ${productName}-${version}.${ext}

npmRebuild: false

publish:
  provider: generic
  url: https://example.com/auto-updates